import React, {useState, useEffect, useRef} from 'react';import {View, Text, FlatList, RefreshControl, Image, Button} from 'react-native';import { useWatchlist } from '../../Contexts/WatchlistContext';import CoinItem from '../../components/CoinItem';import { getWatchlistedCoins } from "../../service/requests";const WatchlistScreen = () => {    const {watchlistCoinIds,getCurrency,currencyGlobal} = useWatchlist();    const [coins, setCoins] = useState([]);    const [loading, setLoading] = useState(false);    const transformCoinIds = () => watchlistCoinIds.join('%2C');    const fetchWatchlistedCoins = async () => {        if (loading) {            return;        }        setLoading(true);        const watchlistedCoinsData = await getWatchlistedCoins(1, transformCoinIds(),currencyGlobal);        setCoins(watchlistedCoinsData);        setLoading(false);    };    useEffect(() => {        if (watchlistCoinIds.length > 0) {            fetchWatchlistedCoins();        }    }, [watchlistCoinIds]);    return (        <View>            <View style={{display: 'flex', flexDirection: 'row', alignItems: 'center',marginLeft: 10}}>                <Image                    style={{width: 50, height: 50}}                    source={{                        uri: 'https://cdn.discordapp.com/attachments/771761528739069962/958792670787014716/FGWnEOWWQAEi0CS-removebg-preview.png'                    }}                    resizeMode = 'contain'                />                <Text style={{ fontFamily: 'DroidSans', color: "white", fontSize: 25, letterSpacing: 1, paddingBottom: 5,marginLeft: 10 }}>Watchlist</Text>            </View>            <FlatList                data={coins}                renderItem={({ item }) => <CoinItem marketCoin={item} currency={currencyGlobal} />}                refreshControl={                    <RefreshControl                        refreshing={loading}                        tintColor="white"                        onRefresh={fetchWatchlistedCoins}                    />                }            />        </View>    )};export default WatchlistScreen;